{"version":3,"sources":["snow.js","app/playersStore.ts","Player.ts","controls/FactionSelect.tsx","controls/LanguageSelector.tsx","controls/Pages/MainPage.tsx","controls/CustomInput.tsx","controls/Pages/PlayerScoreCounterPage.tsx","controls/Pages/PlayersListPage.tsx","controls/Pages/SummaryPage.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["body","document","querySelector","elem","createElement","id","style","display","position","left","top","right","bottom","width","height","pointerEvents","zIndex","appendChild","jsCanvasSnow","canvas","ctx","particles","running","snowcolor","snowfont","snowflake","start_time","frame_time","init","this","getElementById","getContext","resize","window","innerWidth","innerHeight","pAmount","pSize","pSwing","pSpeed","pAmplitude","_init_particles","start","microtime","_loop","stop","w","h","_clear","_update","_draw","_queue","length","i","origin","Vector2","frand","velocity","size","amplitude","push","jsParticle","now_time","delta_time","particle","update","y","x","Math","random","dx","fillStyle","font","fillText","fillRect","clearRect","requestAnimationFrame","sin","Date","getTime","min","max","add","other","magnitude","sqrt","addEventListener","playersSlice","createSlice","name","initialState","players","reducers","addPlayer","state","action","foundPlayer","find","player","faction","payload","indexOf","updatePlayer","reset","actions","PlayerFaction","color","emblemUrl","shortName","toLowerCase","Polania","Saxony","Crimea","Nord","Rusvet","Albion","Togawa","Tesla","Fenris","BaseFactions","InvadersFactions","FenrisFactions","Player","popularity","money","stars","hex","resources","bonus","total","calculateTotal","starsModifier","floor","hexModifier","resourcesModifier","FactionSelect","props","getByName","filter","p","prevProps","setState","className","mra","src","location","alt","to","React","connect","ownProps","LanguageSelector","htmlFor","onChange","e","setActiveLanguage","target","value","localStorage","setItem","activeLanguage","code","languages","map","lng","Component","withLocalize","MainPage","onClick","marginLeft","CustomInput","onKeyUp","ev","key","form","currentTarget","index","Array","prototype","call","elements","focus","preventDefault","icon","flexGrow","type","pattern","inputMode","changeHandler","textAlign","label","PlayerScoreCounterPage","s","_","goToSummary","history","match","params","onSubmit","readOnly","large","waves","marginRight","PlayersListPage","nameInputRef","names","Name","current","Faction","GetRandomFaction","factionsToChoose","some","randomizedList","sort","console","log","ref","onKeyPress","event","AddPlayerToList","SummaryPage","a","b","App","getItem","initialize","options","renderToStaticMarkup","defaultLanguage","addTranslationForLanguage","en","ru","basename","process","path","exact","component","store","configureStore","reducer","playersReducer","localize","localizeReducer","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"kGAAA,WAKI,IAAMA,EAAOC,SAASC,cAAc,QAC9BC,EAAOF,SAASG,cAAc,UACpCD,EAAKE,GAAK,kBACVF,EAAKG,MAAMC,QAAU,QACrBJ,EAAKG,MAAME,SAAW,QACtBL,EAAKG,MAAMG,KAAO,IAClBN,EAAKG,MAAMI,IAAM,IACjBP,EAAKG,MAAMK,MAAQ,IACnBR,EAAKG,MAAMM,OAAS,IACpBT,EAAKG,MAAMO,MAAQ,OACnBV,EAAKG,MAAMQ,OAAS,OACpBX,EAAKG,MAAMS,cAAgB,OAC3BZ,EAAKG,MAAMU,OAAS,UACpBhB,EAAKiB,YAAYd,GAGjB,IAAIe,EAAe,CACfC,OAAQ,KACRC,IAAK,KACLC,UAAW,GACXC,SAAS,EACTC,UAAW,uBACXC,SAAU,QACVC,UAAW,IAEXC,WAAY,EACZC,WAAY,EAEZC,KAZe,WAcXC,KAAKV,OAASlB,SAAS6B,eAAe,mBACtCD,KAAKT,IAAMS,KAAKV,OAAOY,WAAW,MAClCF,KAAKG,OAAOC,OAAOC,WAAYD,OAAOE,aAIlCN,KAAKJ,WAAaI,KAAKL,UACvBK,KAAKO,QAAU,GACfP,KAAKQ,MAAQ,CAAC,GAAI,IAClBR,KAAKS,OAAS,CAAC,GAAK,GACpBT,KAAKU,OAAS,CAAC,GAAI,KACnBV,KAAKW,WAAa,CAAC,GAAI,MAEvBX,KAAKO,QAAU,IACfP,KAAKQ,MAAQ,CAAC,GAAK,KACnBR,KAAKS,OAAS,CAAC,GAAK,GACpBT,KAAKU,OAAS,CAAC,GAAI,KACnBV,KAAKW,WAAa,CAAC,GAAI,KAG3BX,KAAKY,mBAGTC,MArCe,WAsCXb,KAAKP,SAAU,EACfO,KAAKH,WAAaG,KAAKF,WAAagB,IACpCd,KAAKe,SAGTC,KA3Ce,WA4CXhB,KAAKP,SAAU,GAGnBU,OA/Ce,SA+CRc,EAAGC,GACNlB,KAAKV,OAAON,MAAQiC,EACpBjB,KAAKV,OAAOL,OAASiC,GAGzBH,MApDe,WAqDP1B,EAAaI,UACbJ,EAAa8B,SACb9B,EAAa+B,UACb/B,EAAagC,QACbhC,EAAaiC,WAIrBV,gBA7De,WA+DXZ,KAAKR,UAAU+B,OAAS,EAExB,IAAK,IAAIC,EAAI,EAAGA,EAAIxB,KAAKO,QAASiB,IAAK,CACnC,IAAMC,EAAS,IAAIC,EAAQC,EAAM,EAAG3B,KAAKV,OAAON,OAAQ2C,GAAO3B,KAAKV,OAAOL,OAAQ,IAC7E2C,EAAW,IAAIF,EAAQC,EAAM3B,KAAKS,OAAO,GAAIT,KAAKS,OAAO,IAAKkB,EAAM3B,KAAKU,OAAO,GAAIV,KAAKU,OAAO,KAChGmB,EAAOF,EAAM3B,KAAKQ,MAAM,GAAIR,KAAKQ,MAAM,IACvCsB,EAAYH,EAAM3B,KAAKW,WAAW,GAAIX,KAAKW,WAAW,IAE5DX,KAAKR,UAAUuC,KAAK,IAAIC,EAAWP,EAAQG,EAAUC,EAAMC,MAInEV,QA3Ee,WAgFX,IAHA,IAAMa,EAAWnB,IACXoB,EAAaD,EAAWjC,KAAKF,WAE1B0B,EAAI,EAAGA,EAAIxB,KAAKR,UAAU+B,OAAQC,IAAK,CAC5C,IAAMW,EAAWnC,KAAKR,UAAUgC,GAChCW,EAASC,OAAOF,GAEZC,EAASxD,SAAS0D,EAAIF,EAASN,KAAO7B,KAAKV,OAAOL,SAElDkD,EAASxD,SAAS0D,GAAKF,EAASN,KAChCM,EAASxD,SAAS2D,EAAIH,EAASV,OAAOa,EAAIC,KAAKC,SAAWxC,KAAKV,OAAON,MACtEmD,EAASM,GAAqB,IAAhBF,KAAKC,UAK3BxC,KAAKF,WAAamC,GAGtBZ,MAhGe,WAiGXrB,KAAKT,IAAImD,UAAY1C,KAAKN,UAE1B,IAAK,IAAI8B,EAAI,EAAGA,EAAIxB,KAAKR,UAAU+B,OAAQC,IAAK,CAC5C,IAAMW,EAAWnC,KAAKR,UAAUgC,GAC5BxB,KAAKJ,WAAaI,KAAKL,UACvBK,KAAKT,IAAIoD,KAAOR,EAASN,KAAO,MAAQ7B,KAAKL,SAC7CK,KAAKT,IAAIqD,SAAS5C,KAAKJ,UAAWuC,EAASxD,SAAS2D,EAAGH,EAASxD,SAAS0D,IAEzErC,KAAKT,IAAIsD,SAASV,EAASxD,SAAS2D,EAAGH,EAASxD,SAAS0D,EAAGF,EAASN,KAAMM,EAASN,QAKhGV,OA9Ge,WA+GXnB,KAAKT,IAAIuD,UAAU,EAAG,EAAG9C,KAAKV,OAAON,MAAOgB,KAAKV,OAAOL,SAG5DqC,OAlHe,WAmHXlB,OAAO2C,sBAAsB1D,EAAa0B,SAIlD,SAASiB,EAAWP,EAAQG,EAAUC,EAAMC,GACxC9B,KAAKyB,OAASA,EACdzB,KAAKrB,SAAW,IAAI+C,EAAQD,EAAOa,EAAGb,EAAOY,GAC7CrC,KAAK4B,SAAWA,GAAY,IAAIF,EAAQ,EAAG,GAC3C1B,KAAK6B,KAAOA,EACZ7B,KAAK8B,UAAYA,EAGjB9B,KAAKyC,GAAqB,IAAhBF,KAAKC,SAEfxC,KAAKoC,OAAS,SAAUF,GACpBlC,KAAKrB,SAAS0D,GAAKrC,KAAK4B,SAASS,EAAIH,EAGrClC,KAAKyC,IAAMzC,KAAK4B,SAASU,EAAIJ,EAC7BlC,KAAKrB,SAAS2D,EAAItC,KAAKyB,OAAOa,EAAKtC,KAAK8B,UAAYS,KAAKS,IAAIhD,KAAKyC,KAI1E,SAAS3B,IACL,MAA8B,MAAvB,IAAImC,MAAOC,UAStB,SAASvB,EAAMwB,EAAKC,GAChB,OAAQD,GAAO,GAAKZ,KAAKC,WAAaY,GAAO,IAAMD,GAAO,IAQ9D,SAASzB,EAAQY,EAAGD,GAChBrC,KAAKsC,EAAIA,GAAK,EACdtC,KAAKqC,EAAIA,GAAK,EAEdrC,KAAKqD,IAAM,SAAUC,GACjBtD,KAAKsC,GAAKgB,EAAMhB,EAChBtC,KAAKqC,GAAKiB,EAAMjB,GAGpBrC,KAAKuD,UAAY,WACb,OAAOhB,KAAKiB,KAAKxD,KAAKsC,EAAItC,KAAKsC,EAAItC,KAAKqC,EAAIrC,KAAKqC,IAWzDjC,OAAOqD,iBAAiB,UAAU,WAC9BpE,EAAac,OAAOC,OAAOC,WAAYD,OAAOE,gBAC/C,GAEHjB,EAAaU,OACbV,EAAawB,QA5MjB,I,2NCWa6C,EAAeC,YAAY,CACtCC,KAAM,UACNC,aANiC,CACjCC,QAAS,IAMTC,SAAU,CACRC,UAAW,SAACC,EAAOC,GACjB,IAAIC,EAAcF,EAAMH,QAAQM,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UAAYJ,EAAOK,QAAQD,WAC7EH,EACFF,EAAMH,QAAQG,EAAMH,QAAQU,QAAQL,IAAgBD,EAAOK,QAE3DN,EAAMH,QAAQ/B,KAAKmC,EAAOK,UAE9BE,aAAc,SAACR,EAAOC,GACpBD,EAAMH,QAAQG,EAAMH,QAAQU,QAAQN,EAAOK,UAAYL,EAAOK,SAEhEG,MAAO,SAACT,GACNA,EAAMH,QAAU,O,EAK4BJ,EAAaiB,QAEhDjB,G,EAFAM,U,EAAWS,a,EAAcC,MAEzBhB,EAAf,SCjCakB,EAAb,WA0FE,aAAuB,yBAzFhBhB,KAAe,GAyFA,KAxFfiB,MAAgB,GAwFD,KAvFfC,UAAoB,GAuFL,KAtFfC,UAAoB,GAJ7B,2DAM0BnB,GACtB,cAAQA,QAAR,IAAQA,OAAR,EAAQA,EAAMoB,eACZ,IAAK,UACH,OAAOJ,EAAcK,QACvB,IAAK,SACH,OAAOL,EAAcM,OACvB,IAAK,SACH,OAAON,EAAcO,OACvB,IAAK,OACH,OAAOP,EAAcQ,KACvB,IAAK,SACH,OAAOR,EAAcS,OACvB,IAAK,SACH,OAAOT,EAAcU,OACvB,IAAK,SACH,OAAOV,EAAcW,OACvB,IAAK,QACH,OAAOX,EAAcY,MACvB,IAAK,SACH,OAAOZ,EAAca,OACvB,QACE,OAAOb,EAAcK,aA3B7B,KAAaL,EA+BGK,QAAyB,CACrCrB,KAAM,sBACNiB,MAAO,QACPC,UAAW,8BACXC,UAAW,WAnCFH,EAqCGM,OAAwB,CACpCtB,KAAM,gBACNiB,MAAO,QACPC,UAAW,6BACXC,UAAW,UAzCFH,EA2CGO,OAAwB,CACpCvB,KAAM,kBACNiB,MAAO,SACPC,UAAW,6BACXC,UAAW,UA/CFH,EAiDGQ,KAAsB,CAClCxB,KAAM,kBACNiB,MAAO,OACPC,UAAW,2BACXC,UAAW,QArDFH,EAuDGS,OAAwB,CACpCzB,KAAM,gBACNiB,MAAO,MACPC,UAAW,6BACXC,UAAW,UA3DFH,EA6DGU,OAAwB,CACpC1B,KAAM,cACNiB,MAAO,QACPC,UAAW,6BACXC,UAAW,UAjEFH,EAmEGW,OAAwB,CACpC3B,KAAM,mBACNiB,MAAO,SACPC,UAAW,6BACXC,UAAW,UAvEFH,EAyEGY,MAAuB,CACnC5B,KAAM,eACNiB,MAAO,aACPC,UAAW,6BACXC,UAAW,SA7EFH,EA+EGa,OAAwB,CACpC7B,KAAM,SACNiB,MAAO,SACPC,UAAW,8BACXC,UAAW,UAnFFH,EAsFGc,aAAgC,CAACd,EAAcK,QAASL,EAAcM,OAAQN,EAAcO,OAAQP,EAAcQ,KAAKR,EAAcS,QAtFxIT,EAuFGe,iBAAoC,CAACf,EAAcU,OAAQV,EAAcW,QAvF5EX,EAwFGgB,eAAkC,CAAChB,EAAcY,MAAOZ,EAAca,QAK/E,IAAMI,EAWX,WAAmBvC,GAAa,IACnB,gBADkB,iCAVxBwC,WAAqB,EAUG,KATxBC,MAAgB,EASQ,KARxBC,MAAgB,EAQQ,KAPxBC,IAAc,EAOU,KANxBC,UAAoB,EAMI,KALxBC,MAAgB,EAKQ,KAJxBC,MAAgB,EAIQ,KAHxBxC,KAAe,GAGS,KAFxBU,QAAyBM,EAAcK,QAEf,KAaxBoB,eAAiB,WACtB,IAAMC,EAAwB/D,KAAKY,IACjC,EACAZ,KAAKgE,MAAM,EAAKT,WAAa,KAAO,GAEhCU,EAAsBjE,KAAKY,IAC/B,EACAZ,KAAKgE,MAAM,EAAKT,WAAa,KAAO,GAEhCW,EAA4BlE,KAAKY,IACrC,EACAZ,KAAKgE,MAAM,EAAKT,WAAa,IAAM,IAG/BM,EAAQ7D,KAAKgE,MACjB,EAAKR,MACH,EAAKC,MAAQM,EACb,EAAKL,IAAMO,EACXjE,KAAKgE,MAAM,EAAKL,UAAY,GAAKO,EACjC,EAAKN,OAGT,OADA,EAAKC,MAAQA,EACNA,GAlCH9C,KACFtD,KAAK8F,WAAL,UAAkBxC,EAAMwC,kBAAxB,QAAsC,EACtC9F,KAAK+F,MAAL,UAAazC,EAAMyC,aAAnB,QAA4B,EAC5B/F,KAAKgG,MAAL,UAAa1C,EAAM0C,aAAnB,QAA4B,EAC5BhG,KAAKiG,IAAL,UAAW3C,EAAM2C,WAAjB,QAAwB,EACxBjG,KAAKkG,UAAL,UAAiB5C,EAAM4C,iBAAvB,QAAoC,EACpClG,KAAKmG,MAAL,UAAa7C,EAAM6C,aAAnB,QAA4B,EAC5BnG,KAAK4D,KAAL,UAAYN,EAAMM,YAAlB,QAA0B,GAC1B5D,KAAKsE,QAAL,UAAehB,EAAMgB,eAArB,QAAgCM,EAAcK,UC3F9CyB,E,kDAKJ,WAAYC,GAA4B,IAAD,uBACrC,cAAMA,IAFArC,aAC+B,EAErC,EAAKA,QAAUM,EAAcgC,UAAUD,EAAMrC,SAC7C,IAAMD,EAAS,EAAKsC,MAAM7C,QAAQ+C,QAChC,SAACC,GAAD,OAAOA,EAAExC,QAAQS,YAAc,EAAKT,QAAQS,aAJT,OAMrC,EAAKd,MAAQ,CACXI,OAAQA,EAAO9C,OAAS,EAAI8C,EAAO,GAAK,MAPL,E,+DAWb0C,GAAgC,IAAD,OACvD,GAAIA,EAAUjD,UAAY9D,KAAK2G,MAAM7C,QAAS,CAC5C,IAAMA,EAAU9D,KAAK2G,MAAM7C,QAAQ+C,QACjC,SAACC,GAAD,OAAOA,EAAExC,QAAQS,YAAc,EAAKT,QAAQS,aAE9C/E,KAAKgH,SAAS,CAAE3C,OAAQP,EAAQvC,OAAS,EAAIuC,EAAQ,GAAK,U,+BAI7C,IAAD,IACd,OACE,qBAAKmD,UAAW,gBAAkBjH,KAAK2G,MAAMO,IAAM,OAAS,IAA5D,SACE,sBAAKD,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBACEE,IAAG,UACD/G,OAAOgH,SAAS3F,OACd,kBADF,UAEEzB,KAAKsE,eAFP,aAEE,EAAcQ,kBAHf,QAG4B,GAE/BuC,IAAI,oBAGR,qBAAKJ,UAAU,cAAf,SACE,cAAC,IAAD,CAASK,GAAI,UAAYtH,KAAK2G,MAAMrC,QAApC,SACGtE,KAAKiE,MAAMI,OACV,+BAAOrE,KAAKiE,MAAMI,OAAOT,OAEvB,cAAC,IAAD,CAAWpF,GAAG,8B,GA5CJ+I,aA0DbC,eAJS,SAACvD,EAAkBwD,GAAnB,MAAsD,CAC5E3D,QAASG,EAAMH,QAAQA,WAKvBJ,EAAaiB,QAFA6C,CAGbd,GC3EIgB,E,uKACM,IAAD,SACP,OACE,qCACE,uBAAOC,QAAQ,mBAAf,SACE,cAAC,IAAD,CAAWnJ,GAAG,0BAEhB,cAAC,SAAD,CACEoJ,SAAU,SAACC,GACT,EAAKlB,MAAMmB,kBAAkBD,EAAEE,OAAOC,OACtCC,aAAaC,QAAQ,WAAYL,EAAEE,OAAOC,QAE5CA,MAAOhI,KAAK2G,MAAMwB,gBAAkBnI,KAAK2G,MAAMwB,eAAeC,KAC9D5J,GAAG,mBANL,mBAQGwB,KAAK2G,MAAM0B,iBARd,aAQG,EAAsBC,KAAI,SAACC,GAAD,OACzB,wBAAQP,MAAOO,EAAIH,KAAnB,SACGG,EAAI3E,MADuB2E,EAAIH,kB,GAhBfI,aAyBhBC,cAAaf,GCtBtBgB,E,kDACJ,WAAmB/B,GAAuB,uCAClCA,G,qDAES,IAAD,OACd,OACE,gCACE,8BACE,cAAC,EAAD,MAEF,sBAAKM,UAAU,mBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,CAAe3C,QAAQ,YACvB,cAAC,EAAD,CAAeA,QAAQ,WACvB,cAAC,EAAD,CAAeA,QAAQ,WACvB,cAAC,EAAD,CAAeA,QAAQ,WACvB,cAAC,EAAD,CAAeA,QAAQ,OAAO4C,KAAG,OAEnC,sBAAKD,UAAU,iBAAf,UACE,cAAC,EAAD,CAAe3C,QAAQ,SAAS4C,KAAG,IACnC,cAAC,EAAD,CAAe5C,QAAQ,SAAS4C,KAAG,IACnC,cAAC,EAAD,CAAe5C,QAAQ,QAAQ4C,KAAG,IAClC,cAAC,EAAD,CAAe5C,QAAQ,SAAS4C,KAAG,OAErC,sBAAKD,UAAU,MAAf,UACE,cAAC,SAAD,CACE0B,QAAS,WACP,EAAKhC,MAAMjC,SAFf,SAKE,cAAC,IAAD,CAAWlG,GAAG,kBAEhB,cAAC,IAAD,CACE8I,GAAG,WACHL,UAAU,MACVxI,MAAO,CAAEmK,WAAY,QAHvB,SAKE,cAAC,IAAD,CAAWpK,GAAG,iC,GArCL+I,aA8CRC,cAAQ,KAAD,eAAY9D,EAAaiB,SAAhC6C,CAA2CkB,G,QC9CrCG,E,4MACXC,QAAU,SAACC,GACjB,GAAe,UAAXA,EAAGC,IAAiB,CAAC,IAAD,EAChBC,EAAOF,EAAGG,cAAcD,KACxBE,EAAQC,MAAMC,UAAU7E,QAAQ8E,KAAKL,EAAMF,EAAGG,eACpD,QAAC,EAAAD,EAAKM,SAASJ,EAAQ,UAAvB,SAAgDK,QAChDT,EAAGU,mB,uDAIL,OACE,sBAAKxC,UAAU,WAAf,UACE,qBAAKE,IAAKnH,KAAK2G,MAAM+C,KAAMrC,IAAKrH,KAAK2G,MAAM/C,OAC3C,sBACEqD,UAAU,kCACVxI,MAAO,CAAEkL,SAAU,GAFrB,UAIE,+CACEC,KAAK,OACLhG,KAAM5D,KAAK2G,MAAM/C,KACjBpF,GAAIwB,KAAK2G,MAAM/C,MACkB,kBAArB5D,KAAK2G,MAAMqB,OAAsB,CAC3C6B,QAAS,SACTC,UAAW,YANf,IAQE9B,MAAOhI,KAAK2G,MAAMqB,MAClBJ,SAAU5H,KAAK2G,MAAMoD,cACrBjB,QAAS9I,KAAK8I,QACdrK,MAAO,CAAEuL,UAAW,aAEtB,sBAAM/C,UAAU,cAAhB,SACE,cAAC,IAAD,CAAWzI,GAAIwB,KAAK2G,MAAMsD,oB,GA/BG1C,IAAMiB,WCSzC0B,E,kDAIJ,WAAmBvD,GAAiC,IAAD,gCACjD,cAAMA,IAUAoD,cAAgB,SAAClC,GACvB,EAAKb,UAAS,SAACmD,EAAGC,GAChB,IAAMpC,EACc,SAAlBH,EAAEE,OAAOnE,KAAkBiE,EAAEE,OAAOC,OAASH,EAAEE,OAAOC,MAClD3D,EAAiB,IAAIwB,EAAJ,2BAClBsE,EAAE9F,QADgB,kBAEpBwD,EAAEE,OAAOnE,KAAOoE,KAGnB,OADA3D,EAAOgC,iBACA,CAAEhC,cApBsC,EAwB3CL,UAAY,WAAmC,IAAlCqG,EAAiC,wDAChD,EAAKpG,MAAMI,OAAOT,KAAKrC,OAAS,GAClC,EAAKoF,MAAM3C,UAAU,EAAKC,MAAMI,QAClC,EAAKsC,MAAM2D,QAAQvI,KAAKsI,EAAc,WAAa,MAzBnD,EAAKpG,MAAQ,CACXI,OAAM,UACJsC,EAAM7C,QAAQM,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UAAYM,EAAcgC,UAAUD,EAAM4D,MAAMC,OAAO,cADvF,QAEJ,IAAI3E,EAAO,CACTvB,QAASM,EAAcgC,UAAUD,EAAM4D,MAAMC,OAAO,OANT,E,qDA8BvB,IAAD,OACzB,OACE,qBAAKvD,UAAU,sCAAf,SACE,uBAAMwD,SAAU,SAAC5C,GAAD,OAAOA,EAAE4B,kBAAzB,UACE,oBAAIhL,MAAO,CAAEuL,UAAW,UAAxB,SACE,cAAC,IAAD,CAAWxL,GAAIwB,KAAKiE,MAAMI,OAAOC,QAAQS,UAAY,cAEvD,cAAC,EAAD,CACEnB,KAAK,OACLqG,MAAM,YACNP,KAAMtJ,OAAOgH,SAAS3F,OAAhBrB,gCACN4H,MAAOhI,KAAKiE,MAAMI,OAAOT,KACzBmG,cAAe/J,KAAK+J,gBAEtB,cAAC,EAAD,CACEnG,KAAK,aACLqG,MAAM,kBACNP,KACEtJ,OAAOgH,SAAS3F,OAAhBrB,iCAEF4H,MAAOhI,KAAKiE,MAAMI,OAAOyB,WACzBiE,cAAe/J,KAAK+J,gBAEtB,cAAC,EAAD,CACEnG,KAAK,QACLqG,MAAM,aACNP,KAAMtJ,OAAOgH,SAAS3F,OAAhBrB,gCACN4H,MAAOhI,KAAKiE,MAAMI,OAAO0B,MACzBgE,cAAe/J,KAAK+J,gBAEtB,cAAC,EAAD,CACEnG,KAAK,QACLqG,MAAM,aACNP,KAAMtJ,OAAOgH,SAAS3F,OAAhBrB,gCACN4H,MAAOhI,KAAKiE,MAAMI,OAAO2B,MACzB+D,cAAe/J,KAAK+J,gBAEtB,cAAC,EAAD,CACEnG,KAAK,MACLqG,MAAM,WACNP,KAAMtJ,OAAOgH,SAAS3F,OAAhBrB,+BACN4H,MAAOhI,KAAKiE,MAAMI,OAAO4B,IACzB8D,cAAe/J,KAAK+J,gBAEtB,cAAC,EAAD,CACEnG,KAAK,YACLqG,MAAM,iBACNP,KACEtJ,OAAOgH,SAAS3F,OAAhBrB,oCAEF4H,MAAOhI,KAAKiE,MAAMI,OAAO6B,UACzB6D,cAAe/J,KAAK+J,gBAEtB,cAAC,EAAD,CACEnG,KAAK,QACLqG,MAAM,aACNP,KAAMtJ,OAAOgH,SAAS3F,OAAhBrB,gCACN4H,MAAOhI,KAAKiE,MAAMI,OAAO8B,MACzB4D,cAAe/J,KAAK+J,gBAEtB,sBAAK9C,UAAU,YAAf,UACE,uBAAOU,QAAQ,QAAf,SACE,cAAC,IAAD,CAAWnJ,GAAG,iBAEhB,uBACEoL,KAAK,OACLhG,KAAK,QACLpF,GAAG,QACHkM,UAAQ,EACR1C,MAAOhI,KAAKiE,MAAMI,OAAO+B,MACzB3H,MAAO,CAAEuL,UAAW,eAGxB,sBAAK/C,UAAU,MAAf,UACE,cAAC,SAAD,CACEA,UAAU,kBACV0D,OAAK,EACLC,MAAM,OACNjC,QAAS,WACP,EAAK3E,WAAU,IAEjBvF,MAAO,CAAEoM,YAAa,QAPxB,SASE,cAAC,IAAD,CAAWrM,GAAG,mBAEhB,cAAC,SAAD,CACEyI,UAAU,kBACV0D,OAAK,EACLC,MAAM,OACNjC,QAAS,WACP,EAAK3E,aALT,SAQE,cAAC,IAAD,CAAWxF,GAAG,mC,GA/HS+I,IAAMiB,WA4I5BhB,eAJS,SAACvD,EAAkBwD,GAAnB,MAA0D,CAChF3D,QAASG,EAAMH,QAAQA,WAKvBJ,EAAaiB,QAFA6C,CAGb0C,G,QClJIY,E,kDAIJ,WAAmBnE,GAA8B,IAAD,8BAC9C,cAAMA,IAHAoE,kBAEwC,EAE9C,EAAK9G,MAAQ,CAAC+G,MAAO,IACrB,EAAKD,aAAexD,cAH0B,E,8DAO9CvH,KAAKgH,SAAS,CAAEgE,MAAM,GAAD,mBAAMhL,KAAKiE,MAAM+G,OAAjB,CAAwB,CAACC,KAAMjL,KAAK+K,aAAaG,QAAQlD,MAAOmD,QAASnL,KAAKoL,wBACnGpL,KAAK+K,aAAaG,QAAQlD,MAAQ,GAClChI,KAAK+K,aAAaG,QAAQ1B,U,yCAO1B,IAJyC,IAAD,OACpC6B,EAAmB,sBAAIzG,EAAcc,cAAlB,YAAmCd,EAAce,mBACrEkB,QAAO,SAAAvC,GAAO,OAAK,EAAKL,MAAM+G,MAAMM,MAAK,SAAAjH,GAAM,OAAIA,EAAO8G,UAAY7G,QACrEiH,EAAiC,GAC7B/J,EAAI,EAAGA,EAAI,MAAOA,EACxB+J,EAAc,sBAAOA,GAAP,YAA0BF,IAC1CE,EAAeC,MAAK,kBAAMjJ,KAAKC,SAAW,MAC1CiJ,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,GACZ,IAAI/I,EAASD,KAAKgE,MAAMhE,KAAKC,UAAY+I,EAAehK,OAAS,IAEjE,OADAkK,QAAQC,IAAIlJ,GACL+I,EAAe/I,K,+BAGP,IAAD,OACd,OACE,gCACE,8BACE,cAAC,EAAD,MAEF,sBAAKyE,UAAU,mBAAf,UACOjH,KAAKiE,MAAM+G,MAAM1C,KAAI,SAACjE,GAAD,OACpB,sBAAuB4C,UAAU,qBAAjC,UACI,qBAAKjI,MAAO,GAAIC,OAAQ,GAAIkI,IAAK/G,OAAOgH,SAAS3F,OAAS,iBAAmB4C,EAAO8G,QAAQrG,UAAWuC,IAAKhD,EAAO8G,QAAQvH,OAC1HS,EAAO4G,OAFF5G,EAAO4G,SAKvB,uBAAOU,IAAK3L,KAAK+K,aAAcnB,KAAK,OAAOgC,WAAY,SAACC,GAA8B,UAAdA,EAAM7C,KAAiB,EAAK8C,qBACpG,cAAC,SAAD,CAAQ7E,UAAU,eAAe0B,QAAS,kBAAM,EAAKmD,mBAArD,2B,GA5CoBvE,aAmDfC,cAAQ,KAAD,eAAY9D,EAAaiB,SAAhC6C,CAA2CsD,GCzDpDiB,E,uKACa,IAAD,OACd,OACE,sBAAK9E,UAAU,mBAAf,UACE,wBAAOA,UAAU,eAAjB,UACE,gCACE,+BACE,6BACE,cAAC,IAAD,CAAWzI,GAAG,cAEhB,6BACE,qBACE2I,IACE/G,OAAOgH,SAAS3F,OAAhBrB,gCAIFiH,IAAI,WAGR,6BACE,qBACEF,IACE/G,OAAOgH,SAAS3F,OAAhBrB,iCAIFiH,IAAI,YAGR,6BACE,qBACEF,IACE/G,OAAOgH,SAAS3F,OAAhBrB,gCAIFiH,IAAI,WAGR,6BACE,qBACEF,IACE/G,OAAOgH,SAAS3F,OAAhBrB,gCAIFiH,IAAI,WAGR,6BACE,qBACEF,IACE/G,OAAOgH,SAAS3F,OAAhBrB,+BAEFiH,IAAI,UAGR,6BACE,qBACEF,IACE/G,OAAOgH,SAAS3F,OAAhBrB,oCAIFiH,IAAI,eAGR,6BACE,qBACEF,IACE/G,OAAOgH,SAAS3F,OAAhBrB,gCAIFiH,IAAI,YAGR,6BACE,cAAC,IAAD,CAAW7I,GAAG,sBAIpB,gCACGwB,KAAK2G,MAAM7C,QACTwE,KAAI,SAACxB,GAAD,OAAOA,KACX0E,MAAK,SAACQ,EAAGC,GAAJ,OAAUA,EAAE7F,MAAQ4F,EAAE5F,SAC3BkC,KAAI,SAACxB,EAAWtF,GAAZ,OACH,+CAEa,IAANA,GAAW,CAAEyF,UAAW,WAF/B,cAIE,6BACE,sBAAKA,UAAU,qBAAf,UACE,qBACEE,IACE/G,OAAOgH,SAAS3F,OAChB,iBACAqF,EAAExC,QAAQQ,UAEZuC,IAAI,kBAEN,cAAC,IAAD,CAAW7I,GAAIsI,EAAExC,QAAQS,UAAY,iBAGzC,6BAAK+B,EAAElD,OACP,6BAAKkD,EAAEhB,aACP,6BAAKgB,EAAEf,QACP,6BAAKe,EAAEd,QACP,6BAAKc,EAAEb,MACP,6BAAKa,EAAEZ,YACP,6BAAKY,EAAEX,QACP,6BAAKW,EAAEV,WAvBFU,EAAElD,KAAOkD,EAAExC,QAAQV,cA4BlC,cAAC,SAAD,CACE+E,QAAS,WACP,EAAKhC,MAAM2D,QAAQvI,KAAK,MAF5B,SAKE,cAAC,IAAD,CAAWvD,GAAG,0B,GA1HE+I,aAqIXC,eAJS,SAACvD,GAAD,MAAuB,CAC7CH,QAASG,EAAMH,QAAQA,WAGV0D,CAAyBuE,G,yBClIlCG,E,kDACJ,WAAmBvF,GAA8B,IAAD,wBAC9C8E,QAAQC,IAAI,QACZ,cAAM/E,GACN,IAAM4B,EAAG,UAAGN,aAAakE,QAAQ,mBAAxB,QAAuC,KAHF,OAI9CxF,EAAMyF,WAAW,CACf/D,UAAW,CACT,CAAEzE,KAAM,UAAWwE,KAAM,MACzB,CAAExE,KAAM,6CAAWwE,KAAM,OAE3BiE,QAAS,CAAEC,4CAAsBC,gBAAiBhE,KAEpD5B,EAAM6F,0BAA0BC,EAAI,MACpC9F,EAAM6F,0BAA0BE,EAAI,MAChCnE,GAAK5B,EAAMmB,kBAAkBS,GAba,E,qDAgB9C,OACE,cAAC,IAAD,CAAYoE,SAAUC,iBAAtB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWrE,IACjC,cAAC,IAAD,CAAOmE,KAAK,QAAQC,OAAK,EAACC,UAAWjC,IACrC,cAAC,IAAD,CAAO+B,KAAK,WAAWC,OAAK,EAACC,UAAWhB,IACxC,cAAC,IAAD,CAAOc,KAAK,YAAYE,UAAW7C,a,GAvB3B3C,IAAMiB,WA8BTC,cAAayD,GC/Bfc,EAAQC,YAAwC,CAC3DC,QAAS,CACPpJ,QAASqJ,EACTC,SAAUC,O,OCJMC,QACW,cAA7BlN,OAAOgH,SAASmG,UAEe,UAA7BnN,OAAOgH,SAASmG,UAEhBnN,OAAOgH,SAASmG,SAAShD,MACvB,2DCPNiD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAkBA,MAAOA,EAAzB,SACE,cAAC,EAAD,UAIN5O,SAAS6B,eAAe,SDqHpB,kBAAmB0N,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzC,QAAQyC,MAAMA,EAAMC,a","file":"static/js/main.a7c2abf0.chunk.js","sourcesContent":["(function () {\r\n    // FIXME Для версии для слабовищящих:\r\n    // .bvi-body #particle_canvas { display: none !important; }\r\n\r\n    // Полотно для рисования\r\n    const body = document.querySelector('body')\r\n    const elem = document.createElement('canvas')\r\n    elem.id = 'particle_canvas'\r\n    elem.style.display = 'block'\r\n    elem.style.position = 'fixed'\r\n    elem.style.left = '0'\r\n    elem.style.top = '0'\r\n    elem.style.right = '0'\r\n    elem.style.bottom = '0'\r\n    elem.style.width = '100%'\r\n    elem.style.height = '100%'\r\n    elem.style.pointerEvents = 'none'\r\n    elem.style.zIndex = '9999999'\r\n    body.appendChild(elem)\r\n\r\n    // Композитный Объект \"Снег\"\r\n    var jsCanvasSnow = {\r\n        canvas: null,\r\n        ctx: null,\r\n        particles: [],\r\n        running: false,\r\n        snowcolor: 'rgba(172,229,238,.7)',\r\n        snowfont: 'Times',\r\n        snowflake: '*',\r\n\r\n        start_time: 0,\r\n        frame_time: 0,\r\n\r\n        init() {\r\n            // use the container width and height\r\n            this.canvas = document.getElementById('particle_canvas')\r\n            this.ctx = this.canvas.getContext('2d')\r\n            this.resize(window.innerWidth, window.innerHeight)\r\n\r\n            // change these values\r\n            // the 2 element arrays represent min and max values\r\n            if (this.snowflake && this.snowfont) {\r\n                this.pAmount = 50 // amount of particles\r\n                this.pSize = [14, 28] // min and max size\r\n                this.pSwing = [0.1, 1] // min and max oscilation speed for x movement\r\n                this.pSpeed = [40, 100] // min and max y speed\r\n                this.pAmplitude = [25, 50] // min and max distance for x movement\r\n            } else {\r\n                this.pAmount = 5000 // amount of particles\r\n                this.pSize = [0.5, 1.5] // min and max size\r\n                this.pSwing = [0.1, 1] // min and max oscilation speed for x movement\r\n                this.pSpeed = [40, 100] // min and max y speed\r\n                this.pAmplitude = [25, 50] // min and max distance for x movement\r\n            }\r\n\r\n            this._init_particles()\r\n        },\r\n\r\n        start() {\r\n            this.running = true\r\n            this.start_time = this.frame_time = microtime()\r\n            this._loop()\r\n        },\r\n\r\n        stop() {\r\n            this.running = false\r\n        },\r\n\r\n        resize(w, h) {\r\n            this.canvas.width = w\r\n            this.canvas.height = h\r\n        },\r\n\r\n        _loop() {\r\n            if (jsCanvasSnow.running) {\r\n                jsCanvasSnow._clear()\r\n                jsCanvasSnow._update()\r\n                jsCanvasSnow._draw()\r\n                jsCanvasSnow._queue()\r\n            }\r\n        },\r\n\r\n        _init_particles() {\r\n            // clear the particles array\r\n            this.particles.length = 0\r\n\r\n            for (let i = 0; i < this.pAmount; i++) {\r\n                const origin = new Vector2(frand(0, this.canvas.width), frand(-this.canvas.height, 0))\r\n                const velocity = new Vector2(frand(this.pSwing[0], this.pSwing[1]), frand(this.pSpeed[0], this.pSpeed[1]))\r\n                const size = frand(this.pSize[0], this.pSize[1])\r\n                const amplitude = frand(this.pAmplitude[0], this.pAmplitude[1])\r\n\r\n                this.particles.push(new jsParticle(origin, velocity, size, amplitude))\r\n            }\r\n        },\r\n\r\n        _update() {\r\n            // calculate the time since the last frame\r\n            const now_time = microtime()\r\n            const delta_time = now_time - this.frame_time\r\n\r\n            for (let i = 0; i < this.particles.length; i++) {\r\n                const particle = this.particles[i]\r\n                particle.update(delta_time)\r\n\r\n                if (particle.position.y - particle.size > this.canvas.height) {\r\n                    // reset the particle to the top and a random x position\r\n                    particle.position.y = -particle.size\r\n                    particle.position.x = particle.origin.x = Math.random() * this.canvas.width\r\n                    particle.dx = Math.random() * 100\r\n                }\r\n            }\r\n\r\n            // save this time for the next frame\r\n            this.frame_time = now_time\r\n        },\r\n\r\n        _draw() {\r\n            this.ctx.fillStyle = this.snowcolor\r\n\r\n            for (let i = 0; i < this.particles.length; i++) {\r\n                const particle = this.particles[i]\r\n                if (this.snowflake && this.snowfont) {\r\n                    this.ctx.font = particle.size + 'px ' + this.snowfont\r\n                    this.ctx.fillText(this.snowflake, particle.position.x, particle.position.y)\r\n                } else {\r\n                    this.ctx.fillRect(particle.position.x, particle.position.y, particle.size, particle.size)\r\n                }\r\n            }\r\n        },\r\n\r\n        _clear() {\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n        },\r\n\r\n        _queue() {\r\n            window.requestAnimationFrame(jsCanvasSnow._loop)\r\n        },\r\n    }\r\n\r\n    function jsParticle(origin, velocity, size, amplitude) {\r\n        this.origin = origin\r\n        this.position = new Vector2(origin.x, origin.y)\r\n        this.velocity = velocity || new Vector2(0, 0)\r\n        this.size = size\r\n        this.amplitude = amplitude\r\n\r\n        // randomize start values a bit\r\n        this.dx = Math.random() * 100\r\n\r\n        this.update = function (delta_time) {\r\n            this.position.y += this.velocity.y * delta_time\r\n\r\n            // oscilate the x value between -amplitude and +amplitude\r\n            this.dx += this.velocity.x * delta_time\r\n            this.position.x = this.origin.x + (this.amplitude * Math.sin(this.dx))\r\n        }\r\n    }\r\n\r\n    function microtime() {\r\n        return new Date().getTime() * 0.001\r\n    }\r\n\r\n    // returns a random integer from min to max\r\n    function irand(min, max) {\r\n        return Math.floor((min || 0) + Math.random() * ((max + 1 || 100) - (min || 0)))\r\n    }\r\n\r\n    // returns a random float from min to max\r\n    function frand(min, max) {\r\n        return (min || 0) + Math.random() * ((max || 1) - (min || 0))\r\n    }\r\n\r\n    function clamp(value, min, max) {\r\n        return Math.min(Math.max(value, min), max)\r\n    }\r\n\r\n    // Two component vector class\r\n    function Vector2(x, y) {\r\n        this.x = x || 0\r\n        this.y = y || 0\r\n\r\n        this.add = function (other) {\r\n            this.x += other.x\r\n            this.y += other.y\r\n        }\r\n\r\n        this.magnitude = function () {\r\n            return Math.sqrt(this.x * this.x + this.y * this.y)\r\n        }\r\n    }\r\n\r\n    function Color(r, g, b) {\r\n        this.r = r || 0\r\n        this.g = g || 0\r\n        this.b = b || 0\r\n    }\r\n\r\n    // Точка входа\r\n    window.addEventListener('resize', function () {\r\n        jsCanvasSnow.resize(window.innerWidth, window.innerHeight)\r\n    }, false)\r\n\r\n    jsCanvasSnow.init()\r\n    jsCanvasSnow.start()\r\n})()","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Player } from \"../Player\";\r\n\r\nexport interface PlayersState {\r\n  players: Player[];\r\n}\r\n\r\nconst initialState: PlayersState = {\r\n  players: [],\r\n};\r\n\r\nexport const playersSlice = createSlice({\r\n  name: \"players\",\r\n  initialState,\r\n  reducers: {\r\n    addPlayer: (state, action: PayloadAction<Player>) => {\r\n      var foundPlayer = state.players.find(player => player.faction === action.payload.faction);\r\n      if (foundPlayer)\r\n        state.players[state.players.indexOf(foundPlayer)] = action.payload;\r\n      else\r\n        state.players.push(action.payload);\r\n    },\r\n    updatePlayer: (state, action: PayloadAction<Player>) => {\r\n      state.players[state.players.indexOf(action.payload)] = action.payload;\r\n    },\r\n    reset: (state) => {\r\n      state.players = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addPlayer, updatePlayer, reset } = playersSlice.actions;\r\n\r\nexport default playersSlice.reducer;\r\n","export class PlayerFaction {\r\n  public name: string = \"\";\r\n  public color: string = \"\";\r\n  public emblemUrl: string = \"\";\r\n  public shortName: string = \"\";\r\n\r\n  public static getByName(name: string): PlayerFaction {\r\n    switch (name?.toLowerCase()) {\r\n      case \"polania\":\r\n        return PlayerFaction.Polania;\r\n      case \"saxony\":\r\n        return PlayerFaction.Saxony;\r\n      case \"crimea\":\r\n        return PlayerFaction.Crimea;\r\n      case \"nord\":\r\n        return PlayerFaction.Nord;\r\n      case \"rusvet\":\r\n        return PlayerFaction.Rusvet;\r\n      case \"albion\":\r\n        return PlayerFaction.Albion;\r\n      case \"togawa\":\r\n        return PlayerFaction.Togawa;\r\n      case \"tesla\":\r\n        return PlayerFaction.Tesla;\r\n      case \"fenris\":\r\n        return PlayerFaction.Fenris;\r\n      default:\r\n        return PlayerFaction.Polania;\r\n    }\r\n  }\r\n\r\n  public static Polania: PlayerFaction = {\r\n    name: \"Republic of Polania\",\r\n    color: \"white\",\r\n    emblemUrl: \"/icons/factions/polania.png\",\r\n    shortName: \"polania\",\r\n  };\r\n  public static Saxony: PlayerFaction = {\r\n    name: \"Saxony Empire\",\r\n    color: \"black\",\r\n    emblemUrl: \"/icons/factions/saxony.png\",\r\n    shortName: \"saxony\",\r\n  };\r\n  public static Crimea: PlayerFaction = {\r\n    name: \"Crimean Khanate\",\r\n    color: \"yellow\",\r\n    emblemUrl: \"/icons/factions/crimea.png\",\r\n    shortName: \"crimea\",\r\n  };\r\n  public static Nord: PlayerFaction = {\r\n    name: \"Nordic Kingdoms\",\r\n    color: \"blue\",\r\n    emblemUrl: \"/icons/factions/nord.png\",\r\n    shortName: \"nord\",\r\n  };\r\n  public static Rusvet: PlayerFaction = {\r\n    name: \"Rusviet Union\",\r\n    color: \"red\",\r\n    emblemUrl: \"/icons/factions/rusvet.png\",\r\n    shortName: \"rusvet\",\r\n  };\r\n  public static Albion: PlayerFaction = {\r\n    name: \"Clan Albion\",\r\n    color: \"green\",\r\n    emblemUrl: \"/icons/factions/albion.png\",\r\n    shortName: \"albion\",\r\n  };\r\n  public static Togawa: PlayerFaction = {\r\n    name: \"Togawa Shogunate\",\r\n    color: \"purple\",\r\n    emblemUrl: \"/icons/factions/togawa.png\",\r\n    shortName: \"togawa\",\r\n  };\r\n  public static Tesla: PlayerFaction = {\r\n    name: \"Vesna Tesla \",\r\n    color: \"light-blue\",\r\n    emblemUrl: \"/icons/factions/tesla.webp\",\r\n    shortName: \"tesla\",\r\n  };\r\n  public static Fenris: PlayerFaction = {\r\n    name: \"Fenris\",\r\n    color: \"orange\",\r\n    emblemUrl: \"/icons/factions/fenris.webp\",\r\n    shortName: \"fenris\",\r\n  };\r\n\r\n  public static BaseFactions: PlayerFaction[] = [PlayerFaction.Polania, PlayerFaction.Saxony, PlayerFaction.Crimea, PlayerFaction.Nord,PlayerFaction.Rusvet]\r\n  public static InvadersFactions: PlayerFaction[] = [PlayerFaction.Albion, PlayerFaction.Togawa]\r\n  public static FenrisFactions: PlayerFaction[] = [PlayerFaction.Tesla, PlayerFaction.Fenris]\r\n\r\n  private constructor() {}\r\n}\r\n\r\nexport class Player {\r\n  public popularity: number = 0;\r\n  public money: number = 0;\r\n  public stars: number = 0;\r\n  public hex: number = 0;\r\n  public resources: number = 0;\r\n  public bonus: number = 0;\r\n  public total: number = 0;\r\n  public name: string = \"\";\r\n  public faction: PlayerFaction = PlayerFaction.Polania;\r\n\r\n  public constructor(other: any) {\r\n    if (other) {\r\n      this.popularity = other.popularity ?? 0;\r\n      this.money = other.money ?? 0;\r\n      this.stars = other.stars ?? 0;\r\n      this.hex = other.hex ?? 0;\r\n      this.resources = other.resources ?? 0;\r\n      this.bonus = other.bonus ?? 0;\r\n      this.name = other.name ?? \"\";\r\n      this.faction = other.faction ?? PlayerFaction.Polania;\r\n    }\r\n  }\r\n\r\n  public calculateTotal = (): number => {\r\n    const starsModifier: number = Math.min(\r\n      5,\r\n      Math.floor(this.popularity / 6.5) + 3\r\n    ); //0-6 = 3; 6-12 = 4; 13-18 = 5;\r\n    const hexModifier: number = Math.min(\r\n      4,\r\n      Math.floor(this.popularity / 6.5) + 2\r\n    ); //0-6 = 2; 6-12 = 3; 13-18 = 4;\r\n    const resourcesModifier: number = Math.min(\r\n      3,\r\n      Math.floor(this.popularity / 6.5 + 1)\r\n    ); //0-6 = 1; 6-12 = 2; 13-18 = 3;\r\n\r\n    const total = Math.floor(\r\n      this.money +\r\n        this.stars * starsModifier +\r\n        this.hex * hexModifier +\r\n        Math.floor(this.resources / 2) * resourcesModifier +\r\n        this.bonus\r\n    );\r\n    this.total = total;\r\n    return total;\r\n  };\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport * as React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Player, PlayerFaction } from \"../Player\";\r\nimport { RootState } from \"../app/store\";\r\nimport { playersSlice } from \"../app/playersStore\";\r\nimport { Translate } from \"react-localize-redux\";\r\n\r\ninterface IFactionSelectProps {\r\n  faction: string;\r\n  mra?: boolean | undefined;\r\n}\r\n\r\ninterface IFactionSelectState {\r\n  player: Player | null;\r\n}\r\n\r\ntype FactionSelectProps = IFactionSelectProps &\r\n  typeof playersSlice.actions & {\r\n    players: Player[];\r\n  };\r\n\r\nclass FactionSelect extends React.Component<\r\n  FactionSelectProps,\r\n  IFactionSelectState\r\n> {\r\n  private faction: PlayerFaction;\r\n  constructor(props: FactionSelectProps) {\r\n    super(props);\r\n    this.faction = PlayerFaction.getByName(props.faction);\r\n    const player = this.props.players.filter(\r\n      (p) => p.faction.shortName === this.faction.shortName\r\n    );\r\n    this.state = {\r\n      player: player.length > 0 ? player[0] : null,\r\n    };\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: FactionSelectProps) {\r\n    if (prevProps.players !== this.props.players) {\r\n      const players = this.props.players.filter(\r\n        (p) => p.faction.shortName === this.faction.shortName\r\n      );\r\n      this.setState({ player: players.length > 0 ? players[0] : null });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className={\"col s6 m4 l2\" + (this.props.mra ? \" mra\" : \"\")}>\r\n        <div className=\"card\">\r\n          <div className=\"card-image\">\r\n            <img\r\n              src={\r\n                window.location.origin +\r\n                  \"/scythecounter\" +\r\n                  this.faction?.emblemUrl ?? \"\"\r\n              }\r\n              alt=\"faction badge\"\r\n            />\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <NavLink to={\"player/\" + this.props.faction}>\r\n              {this.state.player ? (\r\n                <span>{this.state.player.name}</span>\r\n              ) : (\r\n                  <Translate id=\"selectButton\" />\r\n              )}\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState, ownProps: IFactionSelectProps) => ({\r\n  players: state.players.players,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  playersSlice.actions\r\n)(FactionSelect as any);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  LocalizeContextProps,\r\n  Translate,\r\n  withLocalize,\r\n} from \"react-localize-redux\";\r\nimport { Select } from \"react-materialize\";\r\n\r\nclass LanguageSelector extends Component<LocalizeContextProps> {\r\n  render() {\r\n    return (\r\n      <>\r\n        <label htmlFor=\"languageSelector\">\r\n          <Translate id=\"selectLanguageLabel\" />\r\n        </label>\r\n        <Select\r\n          onChange={(e) => {\r\n            this.props.setActiveLanguage(e.target.value);\r\n            localStorage.setItem(\"language\", e.target.value);\r\n          }}\r\n          value={this.props.activeLanguage && this.props.activeLanguage.code}\r\n          id=\"languageSelector\"\r\n        >\r\n          {this.props.languages?.map((lng) => (\r\n            <option value={lng.code} key={lng.code}>\r\n              {lng.name}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withLocalize(LanguageSelector);\r\n","import * as React from \"react\";\r\nimport { Translate } from \"react-localize-redux\";\r\nimport { Button } from \"react-materialize\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { playersSlice } from \"../../app/playersStore\";\r\nimport FactionSelect from \"../FactionSelect\";\r\nimport LanguageSelector from \"../LanguageSelector\";\r\n\r\ntype MainPageProps = typeof playersSlice.actions;\r\n\r\nclass MainPage extends React.Component<MainPageProps> {\r\n  public constructor(props: MainPageProps) {\r\n    super(props);\r\n  }\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <LanguageSelector />\r\n        </div>\r\n        <div className=\"contentContainer\">\r\n          <div className=\"row factionRow\">\r\n            <FactionSelect faction=\"polania\" />\r\n            <FactionSelect faction=\"saxony\" />\r\n            <FactionSelect faction=\"crimea\" />\r\n            <FactionSelect faction=\"rusvet\" />\r\n            <FactionSelect faction=\"nord\" mra />\r\n          </div>\r\n          <div className=\"row factionRow\">\r\n            <FactionSelect faction=\"albion\" mra />\r\n            <FactionSelect faction=\"togawa\" mra />\r\n            <FactionSelect faction=\"tesla\" mra />\r\n            <FactionSelect faction=\"fenris\" mra />\r\n          </div>\r\n          <div className=\"row\">\r\n            <Button\r\n              onClick={() => {\r\n                this.props.reset();\r\n              }}\r\n            >\r\n              <Translate id=\"resetButton\" />\r\n            </Button>\r\n            <NavLink\r\n              to=\"/summary\"\r\n              className=\"btn\"\r\n              style={{ marginLeft: \"10px\" }}\r\n            >\r\n              <Translate id=\"summaryButton\" />\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { ...playersSlice.actions })(MainPage as any);\r\n","import React from \"react\";\r\nimport { Translate } from \"react-localize-redux\";\r\n\r\ninterface numericInputProps {\r\n  value: number | string;\r\n  changeHandler(event: React.ChangeEvent<HTMLInputElement>): void;\r\n  name: string;\r\n  label: string;\r\n  icon: string;\r\n}\r\n\r\nexport default class CustomInput extends React.Component<numericInputProps> {\r\n  private onKeyUp = (ev: React.KeyboardEvent<HTMLInputElement>): void => {\r\n    if (ev.key === \"Enter\") {\r\n      const form = ev.currentTarget.form!;\r\n      const index = Array.prototype.indexOf.call(form, ev.currentTarget);\r\n      (form.elements[index + 1] as HTMLInputElement)?.focus();\r\n      ev.preventDefault();\r\n    }\r\n  };\r\n  public render() {\r\n    return (\r\n      <div className=\"valueRow\">\r\n        <img src={this.props.icon} alt={this.props.name} />\r\n        <div\r\n          className=\"input-field col s12 pointsInput\"\r\n          style={{ flexGrow: 1 }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            name={this.props.name}\r\n            id={this.props.name}\r\n            {...(typeof this.props.value === \"number\" && {\r\n              pattern: \"[0-9]*\",\r\n              inputMode: \"numeric\",\r\n            })}\r\n            value={this.props.value}\r\n            onChange={this.props.changeHandler}\r\n            onKeyUp={this.onKeyUp}\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n          <span className=\"helper-text\">\r\n            <Translate id={this.props.label} />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { ReactNode } from \"react\";\r\nimport { Translate } from \"react-localize-redux\";\r\nimport { Button } from \"react-materialize\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { playersSlice } from \"../../app/playersStore\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { Player, PlayerFaction } from \"../../Player\";\r\nimport CustomInput from \"../CustomInput\";\r\n\r\ntype PlayerScoreCounterProps = {\r\n  players: Player[],\r\n  player: Player | null;\r\n} & RouteComponentProps<string[]> &\r\n  typeof playersSlice.actions;\r\n\r\ninterface IPlayerScoreCounterState {\r\n  player: Player;\r\n}\r\n\r\nclass PlayerScoreCounterPage extends React.Component<\r\n  PlayerScoreCounterProps,\r\n  IPlayerScoreCounterState\r\n> {\r\n  public constructor(props: PlayerScoreCounterProps) {\r\n    super(props);\r\n    this.state = {\r\n      player:\r\n        props.players.find(player => player.faction === PlayerFaction.getByName(props.match.params[0])) ??\r\n        new Player({\r\n          faction: PlayerFaction.getByName(props.match.params[0]),\r\n        }),\r\n    };\r\n  }\r\n\r\n  private changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState((s, _) => {\r\n      const value: number | string =\r\n        e.target.name === \"name\" ? e.target.value : +e.target.value;\r\n      const player: Player = new Player({\r\n        ...s.player,\r\n        [e.target.name]: value,\r\n      });\r\n      player.calculateTotal();\r\n      return { player };\r\n    });\r\n  };\r\n\r\n  private addPlayer = (goToSummary: boolean = false) => {\r\n    if (this.state.player.name.length > 0)\r\n      this.props.addPlayer(this.state.player);\r\n    this.props.history.push(goToSummary ? \"/summary\" : \"/\");\r\n  };\r\n\r\n  public render(): ReactNode {\r\n    return (\r\n      <div className=\"PlayerScoreCounter contentContainer\">\r\n        <form onSubmit={(e) => e.preventDefault()}>\r\n          <h1 style={{ textAlign: \"center\" }}>\r\n            <Translate id={this.state.player.faction.shortName + \"Faction\"} />\r\n          </h1>\r\n          <CustomInput\r\n            name=\"name\"\r\n            label=\"nameLabel\"\r\n            icon={window.location.origin + \"/scythecounter\" + \"/icons/name.png\"}\r\n            value={this.state.player.name}\r\n            changeHandler={this.changeHandler}\r\n          />\r\n          <CustomInput\r\n            name=\"popularity\"\r\n            label=\"popularityLabel\"\r\n            icon={\r\n              window.location.origin + \"/scythecounter\" + \"/icons/heart.png\"\r\n            }\r\n            value={this.state.player.popularity}\r\n            changeHandler={this.changeHandler}\r\n          />\r\n          <CustomInput\r\n            name=\"money\"\r\n            label=\"moneyLabel\"\r\n            icon={window.location.origin + \"/scythecounter\" + \"/icons/coin.png\"}\r\n            value={this.state.player.money}\r\n            changeHandler={this.changeHandler}\r\n          />\r\n          <CustomInput\r\n            name=\"stars\"\r\n            label=\"starsLabel\"\r\n            icon={window.location.origin + \"/scythecounter\" + \"/icons/star.png\"}\r\n            value={this.state.player.stars}\r\n            changeHandler={this.changeHandler}\r\n          />\r\n          <CustomInput\r\n            name=\"hex\"\r\n            label=\"hexLabel\"\r\n            icon={window.location.origin + \"/scythecounter\" + \"/icons/hex.png\"}\r\n            value={this.state.player.hex}\r\n            changeHandler={this.changeHandler}\r\n          />\r\n          <CustomInput\r\n            name=\"resources\"\r\n            label=\"resourcesLabel\"\r\n            icon={\r\n              window.location.origin + \"/scythecounter\" + \"/icons/resource.png\"\r\n            }\r\n            value={this.state.player.resources}\r\n            changeHandler={this.changeHandler}\r\n          />\r\n          <CustomInput\r\n            name=\"bonus\"\r\n            label=\"bonusLabel\"\r\n            icon={window.location.origin + \"/scythecounter\" + \"/icons/coin.png\"}\r\n            value={this.state.player.bonus}\r\n            changeHandler={this.changeHandler}\r\n          />\r\n          <div className=\"resultRow\">\r\n            <label htmlFor=\"total\">\r\n              <Translate id=\"totalLabel\" />\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"total\"\r\n              id=\"total\"\r\n              readOnly\r\n              value={this.state.player.total}\r\n              style={{ textAlign: \"center\" }}\r\n            />\r\n          </div>\r\n          <div className=\"row\">\r\n            <Button\r\n              className=\"brown lighten-3\"\r\n              large\r\n              waves=\"teal\"\r\n              onClick={() => {\r\n                this.addPlayer(true);\r\n              }}\r\n              style={{ marginRight: \"2rem\" }}\r\n            >\r\n              <Translate id=\"finishButton\" />\r\n            </Button>\r\n            <Button\r\n              className=\"brown lighten-3\"\r\n              large\r\n              waves=\"teal\"\r\n              onClick={() => {\r\n                this.addPlayer();\r\n              }}\r\n            >\r\n              <Translate id=\"nextPlayerButton\" />\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState, ownProps: PlayerScoreCounterProps) => ({\r\n  players: state.players.players,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  playersSlice.actions\r\n)(PlayerScoreCounterPage as any);\r\n","import { randomInt } from \"crypto\";\r\nimport * as React from \"react\";\r\nimport { Translate } from \"react-localize-redux\";\r\nimport { Button, TextInput } from \"react-materialize\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { playersSlice } from \"../../app/playersStore\";\r\nimport { PlayerFaction } from \"../../Player\";\r\nimport FactionSelect from \"../FactionSelect\";\r\nimport LanguageSelector from \"../LanguageSelector\";\r\n\r\ntype PlayersListPageProps = typeof playersSlice.actions;\r\n\r\ninterface IPlayerScoreCounterState {\r\n    names: { Name: string, Faction: PlayerFaction }[];\r\n }\r\n\r\nclass PlayersListPage extends React.Component<PlayersListPageProps, IPlayerScoreCounterState> {\r\n\r\n  private nameInputRef: any;\r\n\r\n  public constructor(props: PlayersListPageProps) {\r\n    super(props);\r\n    this.state = {names: []}\r\n    this.nameInputRef = React.createRef();\r\n  }\r\n\r\n  private AddPlayerToList() {\r\n    this.setState({ names: [...this.state.names, {Name: this.nameInputRef.current.value, Faction: this.GetRandomFaction() }] });\r\n    this.nameInputRef.current.value = \"\";\r\n    this.nameInputRef.current.focus();\r\n  }\r\n\r\n  private GetRandomFaction(): PlayerFaction {\r\n    var factionsToChoose = [...PlayerFaction.BaseFactions, ...PlayerFaction.InvadersFactions]\r\n      .filter(faction => !this.state.names.some(player => player.Faction === faction));\r\n    var randomizedList:PlayerFaction[] = [];\r\n    for(let i = 0; i < 100; ++i)\r\n      randomizedList = [...randomizedList, ...factionsToChoose];\r\n    randomizedList.sort(() => Math.random() - 0.5);\r\n    console.log(factionsToChoose);\r\n    console.log(randomizedList);\r\n    var random = Math.floor(Math.random() * (randomizedList.length - 1));\r\n    console.log(random);\r\n    return randomizedList[random];\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <LanguageSelector />\r\n        </div>\r\n        <div className=\"contentContainer\">\r\n              {this.state.names.map((player) => (\r\n                <div key={player.Name} className=\"valign-wrapper row\">\r\n                    <img width={64} height={64} src={window.location.origin + \"/scythecounter\" + player.Faction.emblemUrl} alt={player.Faction.name}/>\r\n                    {player.Name}\r\n                </div>\r\n              ))}\r\n          <input ref={this.nameInputRef} type=\"text\" onKeyPress={(event) => { if (event.key === \"Enter\") this.AddPlayerToList(); }}/>\r\n          <Button className=\"center-align\" onClick={() => this.AddPlayerToList()}>Add</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { ...playersSlice.actions })(PlayersListPage as any);\r\n","import { connect } from \"react-redux\";\r\nimport * as React from \"react\";\r\nimport { Player } from \"../../Player\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { Button } from \"react-materialize\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Translate } from \"react-localize-redux\";\r\ntype SummaryPageProps = {\r\n  players: Player[];\r\n} & RouteComponentProps;\r\n\r\nclass SummaryPage extends React.Component<SummaryPageProps> {\r\n  public render() {\r\n    return (\r\n      <div className=\"contentContainer\">\r\n        <table className=\"summaryTable\">\r\n          <thead>\r\n            <tr>\r\n              <td>\r\n                <Translate id=\"faction\" />\r\n              </td>\r\n              <td>\r\n                <img\r\n                  src={\r\n                    window.location.origin +\r\n                    \"/scythecounter\" +\r\n                    \"/icons/name.png\"\r\n                  }\r\n                  alt=\"name\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <img\r\n                  src={\r\n                    window.location.origin +\r\n                    \"/scythecounter\" +\r\n                    \"/icons/heart.png\"\r\n                  }\r\n                  alt=\"heart\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <img\r\n                  src={\r\n                    window.location.origin +\r\n                    \"/scythecounter\" +\r\n                    \"/icons/coin.png\"\r\n                  }\r\n                  alt=\"coin\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <img\r\n                  src={\r\n                    window.location.origin +\r\n                    \"/scythecounter\" +\r\n                    \"/icons/star.png\"\r\n                  }\r\n                  alt=\"star\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <img\r\n                  src={\r\n                    window.location.origin + \"/scythecounter\" + \"/icons/hex.png\"\r\n                  }\r\n                  alt=\"hex\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <img\r\n                  src={\r\n                    window.location.origin +\r\n                    \"/scythecounter\" +\r\n                    \"/icons/resource.png\"\r\n                  }\r\n                  alt=\"resource\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <img\r\n                  src={\r\n                    window.location.origin +\r\n                    \"/scythecounter\" +\r\n                    \"/icons/coin.png\"\r\n                  }\r\n                  alt=\"bonus\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <Translate id=\"totalLabel\" />\r\n              </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.players\r\n              .map((p) => p)\r\n              .sort((a, b) => b.total - a.total)\r\n              .map((p: Player, i: number) => (\r\n                <tr\r\n                  key={p.name + p.faction.name}\r\n                  {...(i === 0 && { className: \"winner\" })}\r\n                >\r\n                  <td>\r\n                    <div className=\"summaryFactionCell\">\r\n                      <img\r\n                        src={\r\n                          window.location.origin +\r\n                          \"/scythecounter\" +\r\n                          p.faction.emblemUrl\r\n                        }\r\n                        alt=\"faction badge\"\r\n                      />\r\n                      <Translate id={p.faction.shortName + \"Faction\"} />\r\n                    </div>\r\n                  </td>\r\n                  <td>{p.name}</td>\r\n                  <td>{p.popularity}</td>\r\n                  <td>{p.money}</td>\r\n                  <td>{p.stars}</td>\r\n                  <td>{p.hex}</td>\r\n                  <td>{p.resources}</td>\r\n                  <td>{p.bonus}</td>\r\n                  <td>{p.total}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n        <Button\r\n          onClick={() => {\r\n            this.props.history.push(\"/\");\r\n          }}\r\n        >\r\n          <Translate id=\"goBackButton\" />\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  players: state.players.players,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SummaryPage as any);\r\n","import React, { ReactNode } from \"react\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport { LocalizeContextProps, withLocalize } from \"react-localize-redux\";\r\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport MainPage from \"./controls/Pages/MainPage\";\r\nimport PlayerScoreCounterPage from \"./controls/Pages/PlayerScoreCounterPage\";\r\nimport PlayersListPage from \"./controls/Pages/PlayersListPage\";\r\nimport SummaryPage from \"./controls/Pages/SummaryPage\";\r\nimport \"./snow\"\r\n\r\nimport en from \"./localization/en.json\";\r\nimport ru from \"./localization/ru.json\";\r\n\r\nclass App extends React.Component<LocalizeContextProps> {\r\n  public constructor(props: LocalizeContextProps) {\r\n    console.log('v0.1');\r\n    super(props);\r\n    const lng = localStorage.getItem(\"language\") ?? \"en\";\r\n    props.initialize({\r\n      languages: [\r\n        { name: \"English\", code: \"en\" },\r\n        { name: \"Русский\", code: \"ru\" },\r\n      ],\r\n      options: { renderToStaticMarkup, defaultLanguage: lng },\r\n    });\r\n    props.addTranslationForLanguage(en, \"en\");\r\n    props.addTranslationForLanguage(ru, \"ru\");\r\n    if (lng) props.setActiveLanguage(lng);\r\n  }\r\n  public render(): ReactNode {\r\n    return (\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={MainPage} />\r\n          <Route path=\"/list\" exact component={PlayersListPage} />\r\n          <Route path=\"/summary\" exact component={SummaryPage} />\r\n          <Route path=\"/player/*\" component={PlayerScoreCounterPage} />\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withLocalize(App);\r\n","import { Action, configureStore, ThunkAction } from \"@reduxjs/toolkit\";\r\nimport {\r\n  Action as LocalizeAction,\r\n  localizeReducer,\r\n  LocalizeState,\r\n} from \"react-localize-redux\";\r\nimport playersReducer, { PlayersState } from \"./playersStore\";\r\n\r\ntype reducer = {\r\n  players: PlayersState;\r\n  localize: LocalizeState;\r\n};\r\n\r\nexport const store = configureStore<reducer, LocalizeAction>({\r\n  reducer: {\r\n    players: playersReducer,\r\n    localize: localizeReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"materialize-css/dist/css/materialize.css\";\r\nimport \"materialize-css/dist/js/materialize\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { LocalizeProvider } from \"react-localize-redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport { store } from \"./app/store\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <LocalizeProvider store={store}>\r\n        <App />\r\n      </LocalizeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}